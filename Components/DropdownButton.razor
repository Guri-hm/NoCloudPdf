@typeparam T

<div class="relative inline-block">
    @if (Trigger != null)
    {
        <span @onclick="ToggleMenu">
            @Trigger
        </span>
    }
    else
    {
        <button @onclick="ToggleMenu" class="@ButtonClass" title="@ButtonLabel">
            @if (!string.IsNullOrEmpty(ButtonIconHtml))
            {
                @((MarkupString)ButtonIconHtml)
            }
            <span>@ButtonLabel</span>
        </button>
    }
    @if (ShowMenu)
    {
        <div class="fixed inset-0 z-40" @onclick="CloseMenu" style="background:transparent;"></div>
        <div id="@MenuId"
            class="absolute top-full left-0 mt-1 min-w-[120px] bg-white rounded-lg shadow-lg z-50 border border-gray-300"
            @onclick:stopPropagation>
            @foreach (var item in MenuItems)
            {
                <button class="w-full text-left px-4 py-2 hover:bg-blue-50 text-gray-800 whitespace-nowrap"
                    @onclick="() => OnMenuItemClick(item)">
                    @if (!string.IsNullOrEmpty(item.IconHtml))
                    {
                        @((MarkupString)item.IconHtml)
                    }
                    <span>@item.Label</span>
                </button>
            }
        </div>
    }
</div>

@code {
    [Parameter] public string ButtonLabel { get; set; } = "";
    [Parameter] public string ButtonClass { get; set; } = "";
    [Parameter] public string ButtonIconHtml { get; set; } = "";
    [Parameter] public string MenuId { get; set; } = "dropdownMenu";
    [Parameter] public List<DropdownMenuItem> MenuItems { get; set; } = new();
    [Parameter] public EventCallback OnToggle { get; set; }
    [Parameter] public RenderFragment? Trigger { get; set; }

    private bool ShowMenu { get; set; } = false;

    private async Task OnMenuItemClick(DropdownMenuItem item)
    {
        ShowMenu = false;
        await item.OnClick.InvokeAsync();
    }

    private async Task ToggleMenu()
    {
        ShowMenu = !ShowMenu;
        await OnToggle.InvokeAsync();
    }

    public void CloseMenu()
    {
        ShowMenu = false;
    }
}