@inject IJSRuntime JS

<button @attributes="ButtonAttributes"
    class="bg-blue-600 text-white font-bold py-2 px-4 rounded shadow hover:bg-blue-700 transition"
    @onclick="async () => await InstallPwaAsync()" style="display:@(canInstall ? "block" : "none")">
    インストール
</button>
<input type="hidden" id="@FlagId" value="@FlagValue" />

@code {
    [Parameter]
    public string? Id { get; set; }
    [Parameter(CaptureUnmatchedValues = true)]
    public Dictionary<string, object>? AdditionalAttributes { get; set; }

    private bool canInstall = false;
    private string FlagValue { get; set; } = "pending";
    private string FlagId => (Id ?? "install-pwa-btn") + "-flag";

    private IDictionary<string, object> ButtonAttributes
    {
        get
        {
            var attrs = AdditionalAttributes != null
            ? new Dictionary<string, object>(AdditionalAttributes)
            : new Dictionary<string, object>();
            if (!string.IsNullOrEmpty(Id))
            {
                attrs["id"] = Id;
            }
            return attrs;
        }
    }
    protected override async Task OnAfterRenderAsync(bool firstRender)
    {
        if (firstRender)
        {
            var available = await JS.InvokeAsync<bool>("isInstallPromptAvailable");
            canInstall = available;
            FlagValue = available ? "true" : "false";
            StateHasChanged();
        }
    }

    private async Task InstallPwaAsync()
    {
        // グローバル関数として呼び出す
        bool available = await JS.InvokeAsync<bool>("isInstallPromptAvailable");
        if (available)
        {
            await JS.InvokeVoidAsync("showInstallPrompt");
        }
        else
        {
            Console.WriteLine("インストールできません");
        }
    }
}