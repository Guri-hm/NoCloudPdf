@inject IJSRuntime JS

<button class="bg-blue-600 text-white font-bold py-2 px-4 rounded shadow hover:bg-blue-700 transition"
    @onclick="InstallPwaAsync" style="display:@(canInstall ? "block" : "none")">
    インストール
</button>

@code {
    private bool canInstall = false;
    private IJSObjectReference? jsModule;
    private Timer? timer;

    protected override async Task OnAfterRenderAsync(bool firstRender)
    {
        if (firstRender)
        {
            jsModule = await JS.InvokeAsync<IJSObjectReference>("import", "./js/install-pwa.js");
            int tryCount = 0;
            const int maxTry = 30;

            timer = new Timer(async _ =>
            {
                if (jsModule != null)
                {
                    var available = await jsModule.InvokeAsync<bool>("isInstallPromptAvailable");
                    if (canInstall != available)
                    {
                        canInstall = available;
                        await InvokeAsync(StateHasChanged);
                    }
                    Console.WriteLine($"Install prompt available: {available}");
                    tryCount++;
                    if (available || tryCount >= maxTry)
                    {
                        timer?.Dispose();
                        timer = null;
                    }
                }
            }, null, 0, 5000); // 5秒ごとにチェック
        }
    }
    public void Dispose()
    {
        timer?.Dispose();
    }

    private async Task InstallPwaAsync()
    {
        if (jsModule != null)
        {
            //await jsModule.InvokeVoidAsync("showInstallPrompt");

            bool available = await jsModule.InvokeAsync<bool>("isInstallPromptAvailable");
            if (available)
            {
                await jsModule.InvokeVoidAsync("showInstallPrompt");
            }
            else
            {
                // すでにインストール済みか、まだインストール不可
                Console.WriteLine("インストールできません");
            }
        }
    }
}