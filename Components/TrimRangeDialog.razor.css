/* 親オーバーレイのフェード（背景＆ぼかし） */
.dialog-overlay {
  display: flex;
  align-items: center;
  justify-content: center;
  inset: 0;
  position: fixed;
  padding: 1rem;
  z-index: 250;
  background-color: rgba(0,0,0,0); /* アニメ開始 */
  backdrop-filter: blur(0);
  animation: overlayFadeIn 260ms cubic-bezier(.2,.8,.2,1) forwards;
}

@keyframes overlayFadeIn {
  from {
    background-color: rgba(0,0,0,0);
    backdrop-filter: blur(0);
  }
  to {
    background-color: rgba(0,0,0,0.40);
    backdrop-filter: blur(4px);
  }
}

/* ダイアログ本体のふわっとスライド＆フェード */
.dialog-panel {
  opacity: 0;
  transform: translateY(12px) scale(0.98);
  will-change: opacity, transform;
  animation: panelEnter 320ms cubic-bezier(.2,.8,.2,1) forwards;
}

@keyframes panelEnter {
  from {
    opacity: 0;
    transform: translateY(12px) scale(0.98);
  }
  60% {
    transform: translateY(-4px) scale(1.002);
  }
  to {
    opacity: 1;
    transform: translateY(0) scale(1);
  }
}

/* 任意：閉じ時に少し縮む演出（コンポーネント破棄時は発動しないので別途クラスで制御する場合のみ） */
.dialog-panel.dialog-leave {
  animation: panelLeave 200ms ease-in forwards;
}
@keyframes panelLeave {
  from { opacity: 1; transform: translateY(0) scale(1); }
  to   { opacity: 0; transform: translateY(8px) scale(0.98); }
}